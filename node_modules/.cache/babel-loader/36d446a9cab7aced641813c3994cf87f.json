{"remainingRequest":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/babel-loader/lib/index.js!/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/vuetify/lib/mixins/overlayable/index.js","dependencies":[{"path":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/vuetify/lib/mixins/overlayable/index.js","mtime":499162500000},{"path":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvZWRyb3Nlc2luZ2NheS9Eb2N1bWVudHMvRVhBTVMvZHJpdmVyLXRyaXAtdHJhY2tlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKdmFyIF9WT3ZlcmxheSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vY29tcG9uZW50cy9WT3ZlcmxheSIpKTsKCnZhciBfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uL3V0aWwvaGVscGVycyIpOwoKdmFyIF92dWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInZ1ZSIpKTsKCi8vIENvbXBvbmVudHMKLy8gVXRpbGl0aWVzCi8vIFR5cGVzCgovKiBAdnVlL2NvbXBvbmVudCAqLwp2YXIgX2RlZmF1bHQgPSBfdnVlLmRlZmF1bHQuZXh0ZW5kKCkuZXh0ZW5kKHsKICBuYW1lOiAnb3ZlcmxheWFibGUnLAogIHByb3BzOiB7CiAgICBoaWRlT3ZlcmxheTogQm9vbGVhbiwKICAgIG92ZXJsYXlDb2xvcjogU3RyaW5nLAogICAgb3ZlcmxheU9wYWNpdHk6IFtOdW1iZXIsIFN0cmluZ10KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYW5pbWF0aW9uRnJhbWU6IDAsCiAgICAgIG92ZXJsYXk6IG51bGwKICAgIH07CiAgfSwKCiAgd2F0Y2g6IHsKICAgIGhpZGVPdmVybGF5KHZhbHVlKSB7CiAgICAgIGlmICghdGhpcy5pc0FjdGl2ZSkgcmV0dXJuOwogICAgICBpZiAodmFsdWUpIHRoaXMucmVtb3ZlT3ZlcmxheSgpO2Vsc2UgdGhpcy5nZW5PdmVybGF5KCk7CiAgICB9CgogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnJlbW92ZU92ZXJsYXkoKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBjcmVhdGVPdmVybGF5KCkgewogICAgICBjb25zdCBvdmVybGF5ID0gbmV3IF9WT3ZlcmxheS5kZWZhdWx0KHsKICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgIGFic29sdXRlOiB0aGlzLmFic29sdXRlLAogICAgICAgICAgdmFsdWU6IGZhbHNlLAogICAgICAgICAgY29sb3I6IHRoaXMub3ZlcmxheUNvbG9yLAogICAgICAgICAgb3BhY2l0eTogdGhpcy5vdmVybGF5T3BhY2l0eQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIG92ZXJsYXkuJG1vdW50KCk7CiAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuYWJzb2x1dGUgPyB0aGlzLiRlbC5wYXJlbnROb2RlIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpOwogICAgICBwYXJlbnQgJiYgcGFyZW50Lmluc2VydEJlZm9yZShvdmVybGF5LiRlbCwgcGFyZW50LmZpcnN0Q2hpbGQpOwogICAgICB0aGlzLm92ZXJsYXkgPSBvdmVybGF5OwogICAgfSwKCiAgICBnZW5PdmVybGF5KCkgewogICAgICB0aGlzLmhpZGVTY3JvbGwoKTsKICAgICAgaWYgKHRoaXMuaGlkZU92ZXJsYXkpIHJldHVybjsKICAgICAgaWYgKCF0aGlzLm92ZXJsYXkpIHRoaXMuY3JlYXRlT3ZlcmxheSgpOwogICAgICB0aGlzLmFuaW1hdGlvbkZyYW1lID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHsKICAgICAgICBpZiAoIXRoaXMub3ZlcmxheSkgcmV0dXJuOwoKICAgICAgICBpZiAodGhpcy5hY3RpdmVaSW5kZXggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgdGhpcy5vdmVybGF5LnpJbmRleCA9IFN0cmluZyh0aGlzLmFjdGl2ZVpJbmRleCAtIDEpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy4kZWwpIHsKICAgICAgICAgIHRoaXMub3ZlcmxheS56SW5kZXggPSAoMCwgX2hlbHBlcnMuZ2V0WkluZGV4KSh0aGlzLiRlbCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLm92ZXJsYXkudmFsdWUgPSB0cnVlOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAoKICAgIC8qKiByZW1vdmVPdmVybGF5KGZhbHNlKSB3aWxsIG5vdCByZXN0b3JlIHRoZSBzY29sbGJhciBhZnRlcndhcmRzICovCiAgICByZW1vdmVPdmVybGF5KHNob3dTY3JvbGwgPSB0cnVlKSB7CiAgICAgIGlmICh0aGlzLm92ZXJsYXkpIHsKICAgICAgICAoMCwgX2hlbHBlcnMuYWRkT25jZUV2ZW50TGlzdGVuZXIpKHRoaXMub3ZlcmxheS4kZWwsICd0cmFuc2l0aW9uZW5kJywgKCkgPT4gewogICAgICAgICAgaWYgKCF0aGlzLm92ZXJsYXkgfHwgIXRoaXMub3ZlcmxheS4kZWwgfHwgIXRoaXMub3ZlcmxheS4kZWwucGFyZW50Tm9kZSB8fCB0aGlzLm92ZXJsYXkudmFsdWUpIHJldHVybjsKICAgICAgICAgIHRoaXMub3ZlcmxheS4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLm92ZXJsYXkuJGVsKTsKICAgICAgICAgIHRoaXMub3ZlcmxheS4kZGVzdHJveSgpOwogICAgICAgICAgdGhpcy5vdmVybGF5ID0gbnVsbDsKICAgICAgICB9KTsgLy8gQ2FuY2VsIGFuaW1hdGlvbiBmcmFtZSBpbiBjYXNlCiAgICAgICAgLy8gb3ZlcmxheSBpcyByZW1vdmVkIGJlZm9yZSBpdAogICAgICAgIC8vIGhhcyBmaW5pc2hlZCBpdHMgYW5pbWF0aW9uCgogICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uRnJhbWUpOwogICAgICAgIHRoaXMub3ZlcmxheS52YWx1ZSA9IGZhbHNlOwogICAgICB9CgogICAgICBzaG93U2Nyb2xsICYmIHRoaXMuc2hvd1Njcm9sbCgpOwogICAgfSwKCiAgICBzY3JvbGxMaXN0ZW5lcihlKSB7CiAgICAgIGlmIChlLnR5cGUgPT09ICdrZXlkb3duJykgewogICAgICAgIGlmIChbJ0lOUFVUJywgJ1RFWFRBUkVBJywgJ1NFTEVDVCddLmluY2x1ZGVzKGUudGFyZ2V0LnRhZ05hbWUpIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNDcxNQogICAgICAgIGUudGFyZ2V0LmlzQ29udGVudEVkaXRhYmxlKSByZXR1cm47CiAgICAgICAgY29uc3QgdXAgPSBbX2hlbHBlcnMua2V5Q29kZXMudXAsIF9oZWxwZXJzLmtleUNvZGVzLnBhZ2V1cF07CiAgICAgICAgY29uc3QgZG93biA9IFtfaGVscGVycy5rZXlDb2Rlcy5kb3duLCBfaGVscGVycy5rZXlDb2Rlcy5wYWdlZG93bl07CgogICAgICAgIGlmICh1cC5pbmNsdWRlcyhlLmtleUNvZGUpKSB7CiAgICAgICAgICBlLmRlbHRhWSA9IC0xOwogICAgICAgIH0gZWxzZSBpZiAoZG93bi5pbmNsdWRlcyhlLmtleUNvZGUpKSB7CiAgICAgICAgICBlLmRlbHRhWSA9IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChlLnRhcmdldCA9PT0gdGhpcy5vdmVybGF5IHx8IGUudHlwZSAhPT0gJ2tleWRvd24nICYmIGUudGFyZ2V0ID09PSBkb2N1bWVudC5ib2R5IHx8IHRoaXMuY2hlY2tQYXRoKGUpKSBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9LAoKICAgIGhhc1Njcm9sbGJhcihlbCkgewogICAgICBpZiAoIWVsIHx8IGVsLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkgcmV0dXJuIGZhbHNlOwogICAgICBjb25zdCBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKTsKICAgICAgcmV0dXJuIFsnYXV0bycsICdzY3JvbGwnXS5pbmNsdWRlcyhzdHlsZS5vdmVyZmxvd1kpICYmIGVsLnNjcm9sbEhlaWdodCA+IGVsLmNsaWVudEhlaWdodDsKICAgIH0sCgogICAgc2hvdWxkU2Nyb2xsKGVsLCBkZWx0YSkgewogICAgICBpZiAoZWwuc2Nyb2xsVG9wID09PSAwICYmIGRlbHRhIDwgMCkgcmV0dXJuIHRydWU7CiAgICAgIHJldHVybiBlbC5zY3JvbGxUb3AgKyBlbC5jbGllbnRIZWlnaHQgPT09IGVsLnNjcm9sbEhlaWdodCAmJiBkZWx0YSA+IDA7CiAgICB9LAoKICAgIGlzSW5zaWRlKGVsLCBwYXJlbnQpIHsKICAgICAgaWYgKGVsID09PSBwYXJlbnQpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIGlmIChlbCA9PT0gbnVsbCB8fCBlbCA9PT0gZG9jdW1lbnQuYm9keSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5pc0luc2lkZShlbC5wYXJlbnROb2RlLCBwYXJlbnQpOwogICAgICB9CiAgICB9LAoKICAgIGNoZWNrUGF0aChlKSB7CiAgICAgIGNvbnN0IHBhdGggPSBlLnBhdGggfHwgdGhpcy5jb21wb3NlZFBhdGgoZSk7CiAgICAgIGNvbnN0IGRlbHRhID0gZS5kZWx0YVk7CgogICAgICBpZiAoZS50eXBlID09PSAna2V5ZG93bicgJiYgcGF0aFswXSA9PT0gZG9jdW1lbnQuYm9keSkgewogICAgICAgIGNvbnN0IGRpYWxvZyA9IHRoaXMuJHJlZnMuZGlhbG9nOyAvLyBnZXRTZWxlY3Rpb24gcmV0dXJucyBudWxsIGluIGZpcmVmb3ggaW4gc29tZSBlZGdlIGNhc2VzLCBjYW4gYmUgaWdub3JlZAoKICAgICAgICBjb25zdCBzZWxlY3RlZCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5hbmNob3JOb2RlOwoKICAgICAgICBpZiAoZGlhbG9nICYmIHRoaXMuaGFzU2Nyb2xsYmFyKGRpYWxvZykgJiYgdGhpcy5pc0luc2lkZShzZWxlY3RlZCwgZGlhbG9nKSkgewogICAgICAgICAgcmV0dXJuIHRoaXMuc2hvdWxkU2Nyb2xsKGRpYWxvZywgZGVsdGEpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBwYXRoLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgIGNvbnN0IGVsID0gcGF0aFtpbmRleF07CiAgICAgICAgaWYgKGVsID09PSBkb2N1bWVudCkgcmV0dXJuIHRydWU7CiAgICAgICAgaWYgKGVsID09PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHJldHVybiB0cnVlOwogICAgICAgIGlmIChlbCA9PT0gdGhpcy4kcmVmcy5jb250ZW50KSByZXR1cm4gdHJ1ZTsKICAgICAgICBpZiAodGhpcy5oYXNTY3JvbGxiYXIoZWwpKSByZXR1cm4gdGhpcy5zaG91bGRTY3JvbGwoZWwsIGRlbHRhKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAoKICAgIC8qKgogICAgICogUG9seWZpbGwgZm9yIEV2ZW50LnByb3RvdHlwZS5jb21wb3NlZFBhdGgKICAgICAqLwogICAgY29tcG9zZWRQYXRoKGUpIHsKICAgICAgaWYgKGUuY29tcG9zZWRQYXRoKSByZXR1cm4gZS5jb21wb3NlZFBhdGgoKTsKICAgICAgY29uc3QgcGF0aCA9IFtdOwogICAgICBsZXQgZWwgPSBlLnRhcmdldDsKCiAgICAgIHdoaWxlIChlbCkgewogICAgICAgIHBhdGgucHVzaChlbCk7CgogICAgICAgIGlmIChlbC50YWdOYW1lID09PSAnSFRNTCcpIHsKICAgICAgICAgIHBhdGgucHVzaChkb2N1bWVudCk7CiAgICAgICAgICBwYXRoLnB1c2god2luZG93KTsKICAgICAgICAgIHJldHVybiBwYXRoOwogICAgICAgIH0KCiAgICAgICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50OwogICAgICB9CgogICAgICByZXR1cm4gcGF0aDsKICAgIH0sCgogICAgaGlkZVNjcm9sbCgpIHsKICAgICAgaWYgKHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC5zbUFuZERvd24pIHsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnb3ZlcmZsb3cteS1oaWRkZW4nKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAoMCwgX2hlbHBlcnMuYWRkUGFzc2l2ZUV2ZW50TGlzdGVuZXIpKHdpbmRvdywgJ3doZWVsJywgdGhpcy5zY3JvbGxMaXN0ZW5lciwgewogICAgICAgICAgcGFzc2l2ZTogZmFsc2UKICAgICAgICB9KTsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuc2Nyb2xsTGlzdGVuZXIpOwogICAgICB9CiAgICB9LAoKICAgIHNob3dTY3JvbGwoKSB7CiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyZmxvdy15LWhpZGRlbicpOwogICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2hlZWwnLCB0aGlzLnNjcm9sbExpc3RlbmVyKTsKICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLnNjcm9sbExpc3RlbmVyKTsKICAgIH0KCiAgfQp9KTsKCmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},null]}