{"remainingRequest":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/babel-loader/lib/index.js!/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/vuetify/lib/components/VSnackbar/VSnackbar.js","dependencies":[{"path":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/vuetify/lib/components/VSnackbar/VSnackbar.js","mtime":499162500000},{"path":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edrosesingcay/Documents/EXAMS/driver-trip-tracker/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvZWRyb3Nlc2luZ2NheS9Eb2N1bWVudHMvRVhBTVMvZHJpdmVyLXRyaXAtdHJhY2tlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKcmVxdWlyZSgiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVlNuYWNrYmFyL1ZTbmFja2Jhci5zYXNzIik7Cgp2YXIgX1ZTaGVldCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vVlNoZWV0L1ZTaGVldCIpKTsKCnZhciBfY29sb3JhYmxlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi8uLi9taXhpbnMvY29sb3JhYmxlIikpOwoKdmFyIF90aGVtZWFibGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uLy4uL21peGlucy90aGVtZWFibGUiKSk7Cgp2YXIgX3RvZ2dsZWFibGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uLy4uL21peGlucy90b2dnbGVhYmxlIikpOwoKdmFyIF9wb3NpdGlvbmFibGUgPSByZXF1aXJlKCIuLi8uLi9taXhpbnMvcG9zaXRpb25hYmxlIik7Cgp2YXIgX21peGlucyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi4vLi4vdXRpbC9taXhpbnMiKSk7Cgp2YXIgX2hlbHBlcnMgPSByZXF1aXJlKCIuLi8uLi91dGlsL2hlbHBlcnMiKTsKCnZhciBfY29uc29sZSA9IHJlcXVpcmUoIi4uLy4uL3V0aWwvY29uc29sZSIpOwoKLy8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwp2YXIgX2RlZmF1bHQgPSAoMCwgX21peGlucy5kZWZhdWx0KShfVlNoZWV0LmRlZmF1bHQsIF9jb2xvcmFibGUuZGVmYXVsdCwgX3RvZ2dsZWFibGUuZGVmYXVsdCwgKDAsIF9wb3NpdGlvbmFibGUuZmFjdG9yeSkoWydhYnNvbHV0ZScsICdib3R0b20nLCAnbGVmdCcsICdyaWdodCcsICd0b3AnXSkKLyogQHZ1ZS9jb21wb25lbnQgKi8KKS5leHRlbmQoewogIG5hbWU6ICd2LXNuYWNrYmFyJywKICBwcm9wczogewogICAgYXBwOiBCb29sZWFuLAogICAgY2VudGVyZWQ6IEJvb2xlYW4sCiAgICBjb250ZW50Q2xhc3M6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIG11bHRpTGluZTogQm9vbGVhbiwKICAgIHRleHQ6IEJvb2xlYW4sCiAgICB0aW1lb3V0OiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDUwMDAKICAgIH0sCiAgICB0cmFuc2l0aW9uOiB7CiAgICAgIHR5cGU6IFtCb29sZWFuLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiAndi1zbmFjay10cmFuc2l0aW9uJywKICAgICAgdmFsaWRhdG9yOiB2ID0+IHR5cGVvZiB2ID09PSAnc3RyaW5nJyB8fCB2ID09PSBmYWxzZQogICAgfSwKICAgIHZlcnRpY2FsOiBCb29sZWFuCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgYWN0aXZlVGltZW91dDogLTEKICB9KSwKICBjb21wdXRlZDogewogICAgY2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAndi1zbmFjay0tYWJzb2x1dGUnOiB0aGlzLmFic29sdXRlLAogICAgICAgICd2LXNuYWNrLS1hY3RpdmUnOiB0aGlzLmlzQWN0aXZlLAogICAgICAgICd2LXNuYWNrLS1ib3R0b20nOiB0aGlzLmJvdHRvbSB8fCAhdGhpcy50b3AsCiAgICAgICAgJ3Ytc25hY2stLWNlbnRlcmVkJzogdGhpcy5jZW50ZXJlZCwKICAgICAgICAndi1zbmFjay0taGFzLWJhY2tncm91bmQnOiB0aGlzLmhhc0JhY2tncm91bmQsCiAgICAgICAgJ3Ytc25hY2stLWxlZnQnOiB0aGlzLmxlZnQsCiAgICAgICAgJ3Ytc25hY2stLW11bHRpLWxpbmUnOiB0aGlzLm11bHRpTGluZSAmJiAhdGhpcy52ZXJ0aWNhbCwKICAgICAgICAndi1zbmFjay0tcmlnaHQnOiB0aGlzLnJpZ2h0LAogICAgICAgICd2LXNuYWNrLS10ZXh0JzogdGhpcy50ZXh0LAogICAgICAgICd2LXNuYWNrLS10b3AnOiB0aGlzLnRvcCwKICAgICAgICAndi1zbmFjay0tdmVydGljYWwnOiB0aGlzLnZlcnRpY2FsCiAgICAgIH07CiAgICB9LAoKICAgIC8vIFRleHQgYW5kIG91dGxpbmVkIHN0eWxlcyBib3RoCiAgICAvLyB1c2UgdHJhbnNwYXJlbnQgYmFja2dyb3VuZHMKICAgIGhhc0JhY2tncm91bmQoKSB7CiAgICAgIHJldHVybiAhdGhpcy50ZXh0ICYmICF0aGlzLm91dGxpbmVkOwogICAgfSwKCiAgICAvLyBTbmFja2JhciBpcyBkYXJrIGJ5IGRlZmF1bHQKICAgIC8vIG92ZXJyaWRlIHRoZW1lYWJsZSBsb2dpYy4KICAgIGlzRGFyaygpIHsKICAgICAgcmV0dXJuIHRoaXMuaGFzQmFja2dyb3VuZCA/ICF0aGlzLmxpZ2h0IDogX3RoZW1lYWJsZS5kZWZhdWx0Lm9wdGlvbnMuY29tcHV0ZWQuaXNEYXJrLmNhbGwodGhpcyk7CiAgICB9LAoKICAgIHN0eWxlcygpIHsKICAgICAgLy8gU3R5bGVzIGFyZSBub3QgbmVlZGVkIHdoZW4KICAgICAgLy8gdXNpbmcgdGhlIGFic29sdXRlIHByb3AuCiAgICAgIGlmICh0aGlzLmFic29sdXRlKSByZXR1cm4ge307CiAgICAgIGNvbnN0IHsKICAgICAgICBiYXIsCiAgICAgICAgYm90dG9tLAogICAgICAgIGZvb3RlciwKICAgICAgICBpbnNldEZvb3RlciwKICAgICAgICBsZWZ0LAogICAgICAgIHJpZ2h0LAogICAgICAgIHRvcAogICAgICB9ID0gdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbjsgLy8gU2hvdWxkIGFsd2F5cyBtb3ZlIGZvciB5LWF4aXMKICAgICAgLy8gYXBwbGljYXRpb25hYmxlIGNvbXBvbmVudHMuCgogICAgICByZXR1cm4gewogICAgICAgIHBhZGRpbmdCb3R0b206ICgwLCBfaGVscGVycy5jb252ZXJ0VG9Vbml0KShib3R0b20gKyBmb290ZXIgKyBpbnNldEZvb3RlciksCiAgICAgICAgcGFkZGluZ0xlZnQ6ICF0aGlzLmFwcCA/IHVuZGVmaW5lZCA6ICgwLCBfaGVscGVycy5jb252ZXJ0VG9Vbml0KShsZWZ0KSwKICAgICAgICBwYWRkaW5nUmlnaHQ6ICF0aGlzLmFwcCA/IHVuZGVmaW5lZCA6ICgwLCBfaGVscGVycy5jb252ZXJ0VG9Vbml0KShyaWdodCksCiAgICAgICAgcGFkZGluZ1RvcDogKDAsIF9oZWxwZXJzLmNvbnZlcnRUb1VuaXQpKGJhciArIHRvcCkKICAgICAgfTsKICAgIH0KCiAgfSwKICB3YXRjaDogewogICAgaXNBY3RpdmU6ICdzZXRUaW1lb3V0JywKICAgIHRpbWVvdXQ6ICdzZXRUaW1lb3V0JwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5pc0FjdGl2ZSkgdGhpcy5zZXRUaW1lb3V0KCk7CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICBpZiAodGhpcy4kYXR0cnMuaGFzT3duUHJvcGVydHkoJ2F1dG8taGVpZ2h0JykpIHsKICAgICAgKDAsIF9jb25zb2xlLnJlbW92ZWQpKCdhdXRvLWhlaWdodCcsIHRoaXMpOwogICAgfQogICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXEKCgogICAgaWYgKHRoaXMudGltZW91dCA9PSAwKSB7CiAgICAgICgwLCBfY29uc29sZS5kZXByZWNhdGUpKCd0aW1lb3V0PSIwIicsICctMScsIHRoaXMpOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGdlbkFjdGlvbnMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICd2LXNuYWNrX19hY3Rpb24gJwogICAgICB9LCBbKDAsIF9oZWxwZXJzLmdldFNsb3QpKHRoaXMsICdhY3Rpb24nLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGNsYXNzOiAndi1zbmFja19fYnRuJwogICAgICAgIH0KICAgICAgfSldKTsKICAgIH0sCgogICAgZ2VuQ29udGVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsKICAgICAgICBzdGF0aWNDbGFzczogJ3Ytc25hY2tfX2NvbnRlbnQnLAogICAgICAgIGNsYXNzOiB7CiAgICAgICAgICBbdGhpcy5jb250ZW50Q2xhc3NdOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBhdHRyczogewogICAgICAgICAgcm9sZTogJ3N0YXR1cycsCiAgICAgICAgICAnYXJpYS1saXZlJzogJ3BvbGl0ZScKICAgICAgICB9CiAgICAgIH0sIFsoMCwgX2hlbHBlcnMuZ2V0U2xvdCkodGhpcyldKTsKICAgIH0sCgogICAgZ2VuV3JhcHBlcigpIHsKICAgICAgY29uc3Qgc2V0Q29sb3IgPSB0aGlzLmhhc0JhY2tncm91bmQgPyB0aGlzLnNldEJhY2tncm91bmRDb2xvciA6IHRoaXMuc2V0VGV4dENvbG9yOwogICAgICBjb25zdCBkYXRhID0gc2V0Q29sb3IodGhpcy5jb2xvciwgewogICAgICAgIHN0YXRpY0NsYXNzOiAndi1zbmFja19fd3JhcHBlcicsCiAgICAgICAgY2xhc3M6IF9WU2hlZXQuZGVmYXVsdC5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSwKICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgbmFtZTogJ3Nob3cnLAogICAgICAgICAgdmFsdWU6IHRoaXMuaXNBY3RpdmUKICAgICAgICB9XQogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIGRhdGEsIFt0aGlzLmdlbkNvbnRlbnQoKSwgdGhpcy5nZW5BY3Rpb25zKCldKTsKICAgIH0sCgogICAgZ2VuVHJhbnNpdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyYW5zaXRpb24nLCB7CiAgICAgICAgcHJvcHM6IHsKICAgICAgICAgIG5hbWU6IHRoaXMudHJhbnNpdGlvbgogICAgICAgIH0KICAgICAgfSwgW3RoaXMuZ2VuV3JhcHBlcigpXSk7CiAgICB9LAoKICAgIHNldFRpbWVvdXQoKSB7CiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5hY3RpdmVUaW1lb3V0KTsKICAgICAgY29uc3QgdGltZW91dCA9IE51bWJlcih0aGlzLnRpbWVvdXQpOwoKICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlIHx8IC8vIFRPRE86IHJlbW92ZSAwIGluIHYzCiAgICAgIFswLCAtMV0uaW5jbHVkZXModGltZW91dCkpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuYWN0aXZlVGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7CiAgICAgIH0sIHRpbWVvdXQpOwogICAgfQoKICB9LAoKICByZW5kZXIoaCkgewogICAgcmV0dXJuIGgoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICd2LXNuYWNrJywKICAgICAgY2xhc3M6IHRoaXMuY2xhc3NlcywKICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzCiAgICB9LCBbdGhpcy50cmFuc2l0aW9uICE9PSBmYWxzZSA/IHRoaXMuZ2VuVHJhbnNpdGlvbigpIDogdGhpcy5nZW5XcmFwcGVyKCldKTsKICB9Cgp9KTsKCmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},null]}